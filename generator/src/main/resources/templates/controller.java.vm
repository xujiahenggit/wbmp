package $!{package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiImplicitParam;
import com.bank.core.entity.PageQueryModel;
import org.springframework.web.bind.annotation.*;
#if($!{superEntityClass})
#end
import $!{package.Entity}.$!{entity}DO;
#set($voPackage=$package.Entity.replace("dos","vo"))
import $!{voPackage}.$!{entity}VO;
#set($wrapperPackage=$package.Entity.replace("dos","wrapper"))

import $!{package.Service}.$!{table.serviceName};
#if($!{superControllerClassPackage})
import $!{superControllerClassPackage};
#end
#if(!$!{superEntityClass})
#end
import javax.annotation.Resource;
/**
 * $!{table.comment} 控制器
 *
 * @author $!{author}
 * @since $!{date}
 */
@RestController
@RequestMapping("/$!{table.entityPath}")
@Api(value = "$!{table.comment}", tags = "$!{table.comment}接口")
#if($!{superControllerClass})
public class $!{table.controllerName} extends $!{superControllerClass} {
#else
public class $!{table.controllerName} {
#end

	@Resource
	private $!{table.serviceName} $!{table.entityPath}Service;


	/**
	 * 详情
	 */
	@GetMapping("/{id}")
	@ApiImplicitParam(name = "id", value = "唯一标识", required = true, paramType = "path")
	@ApiOperation(value = "详情", notes = "传入id")
	public Object detail(@PathVariable String id) {
		return $!{table.entityPath}Service.getById(id);
	}

	/**
	 * 分页 $!{table.comment}
	 */
	@PostMapping("/list")
	@ApiOperation(value = "分页", notes = "传入PageQueryModel")
	public Object list(@RequestBody PageQueryModel pageQueryModel) {
		return $!{table.entityPath}Service.listPage(pageQueryModel);
	}

	/**
	 * 新增或修改 $!{table.comment}
	 */
	@PostMapping("/save")
	@ApiOperation(value = "新增或修改", notes = "传入$!{table.entityPath}")
	public Object save(@RequestBody $!{entity}DO $!{table.entityPath}) {
		return $!{table.entityPath}Service.saveOrUpdate($!{table.entityPath});
	}


	/**
	 * 删除 $!{table.comment}
	 */
	@DeleteMapping("/{id}")
	@ApiOperation(value = "删除", notes = "传入id")
	@ApiImplicitParam(name = "id", value = "唯一标识", required = true, paramType = "path")
	public Object remove(@PathVariable String id) {
		return $!{table.entityPath}Service.removeById(id);
	}


}
