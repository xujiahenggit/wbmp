-- Determine if the table exists, and if so, delete it
DECLARE NUM NUMBER;
BEGIN
	SELECT
		COUNT( 1 ) INTO NUM
	FROM
		ALL_TABLES
	WHERE
		TABLE_NAME = 'SYS_PERMISSION'
		AND OWNER = 'BANK';
	IF
		NUM = 1 THEN
			EXECUTE IMMEDIATE 'DROP TABLE SYS_PERMISSION';

	END IF;
END;
/
-- CREATE TABLE  创建系统权限信息表
CREATE TABLE SYS_PERMISSION (
	ID NUMBER ( 16 ) NOT NULL,
	NAME VARCHAR2 ( 32 ) NOT NULL,
	CODE VARCHAR2 ( 32 ) NOT NULL,
	CREATE_TIME NUMBER ( 16 ) NOT NULL,
	UPDATE_TIME NUMBER ( 16 ) NOT NULL
);
-- Add comments to the table
COMMENT ON TABLE SYS_PERMISSION IS '系统权限信息表';
-- Add comments to the columns
COMMENT ON COLUMN SYS_PERMISSION.ID IS '主键';
COMMENT ON COLUMN SYS_PERMISSION.NAME IS '权限名';
COMMENT ON COLUMN SYS_PERMISSION.CODE IS '权限标识码';
COMMENT ON COLUMN SYS_PERMISSION.CREATE_TIME IS '创建时间戳';
COMMENT ON COLUMN SYS_PERMISSION.UPDATE_TIME IS '更新时间戳';
-- Set the primary key
ALTER TABLE SYS_PERMISSION ADD CONSTRAINT PK_SYS_PERMISSION PRIMARY KEY ( ID );
-- Determine if the sequence exists, and if so, delete it
DECLARE NUM NUMBER;
BEGIN
	SELECT
		COUNT( 1 ) INTO NUM
	FROM
		USER_SEQUENCES
	WHERE
		SEQUENCE_NAME = 'SEQ_SYS_PERMISSION';
	IF
		NUM = 1 THEN
			EXECUTE IMMEDIATE 'DROP SEQUENCE SEQ_SYS_PERMISSION';

	END IF;
END;
/
-- Create an autoincrement sequence
CREATE SEQUENCE SEQ_SYS_PERMISSION MINVALUE 1 NOMAXVALUE INCREMENT BY 1 START WITH 1 NOCACHE;
-- Insert test data
INSERT INTO SYS_PERMISSION ( ID, NAME, CODE, CREATE_TIME, UPDATE_TIME )
VALUES
	( SEQ_SYS_PERMISSION.NEXTVAL, '查看用户信息', 'user:info:query', 1572421507441, 1572421507441 );
INSERT INTO SYS_PERMISSION ( ID, NAME, CODE, CREATE_TIME, UPDATE_TIME )
VALUES
	( SEQ_SYS_PERMISSION.NEXTVAL, '添加用户信息', 'user:info:insert', 1572421507441, 1572421507441 );

--------------------------------------------------分割线-----------------------------------------------------------------

-- Determine if the table exists, and if so, delete it
DECLARE NUM NUMBER;
BEGIN
	SELECT
		COUNT( 1 ) INTO NUM
	FROM
		ALL_TABLES
	WHERE
		TABLE_NAME = 'SYS_ROLE_PERMISSION'
		AND OWNER = 'BANK';
	IF
		NUM = 1 THEN
			EXECUTE IMMEDIATE 'DROP TABLE SYS_ROLE_PERMISSION';

	END IF;
END;
/
-- CREATE TABLE  创建系统角色权限映射表
CREATE TABLE SYS_ROLE_PERMISSION (
	ROLE_ID NUMBER ( 16 ) NOT NULL,
	PERMISSION_ID NUMBER ( 16 ) NOT NULL,
    CREATE_TIME NUMBER ( 16 ) NOT NULL,
    UPDATE_TIME NUMBER ( 16 ) NOT NULL
);
-- Add comments to the table
COMMENT ON TABLE SYS_ROLE_PERMISSION IS '系统角色权限映射表';
-- Add comments to the columns
COMMENT ON COLUMN SYS_ROLE_PERMISSION.ROLE_ID IS '角色ID';
COMMENT ON COLUMN SYS_ROLE_PERMISSION.PERMISSION_ID IS '权限ID';
COMMENT ON COLUMN SYS_ROLE_PERMISSION.CREATE_TIME IS '创建时间戳';
COMMENT ON COLUMN SYS_ROLE_PERMISSION.UPDATE_TIME IS '更新时间戳';
-- Set the primary key
ALTER TABLE SYS_ROLE_PERMISSION ADD CONSTRAINT PK_SYS_ROLE_PERMISSION PRIMARY KEY ( ROLE_ID,PERMISSION_ID );
-- Insert test data
INSERT INTO SYS_ROLE_PERMISSION ( ROLE_ID, PERMISSION_ID, CREATE_TIME, UPDATE_TIME )
VALUES
	( 2, 2, 1572421507441, 1572421507441 );
INSERT INTO SYS_ROLE_PERMISSION ( ROLE_ID, PERMISSION_ID, CREATE_TIME, UPDATE_TIME )
VALUES
	( 2, 3, 1572421507441, 1572421507441 );
INSERT INTO SYS_ROLE_PERMISSION ( ROLE_ID, PERMISSION_ID, CREATE_TIME, UPDATE_TIME )
VALUES
	( 3, 3, 1572421507441, 1572421507441 );

--------------------------------------------------分割线-----------------------------------------------------------------
COMMIT;