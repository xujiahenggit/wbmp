application:
  ip: 162.16.14.77
  port: 9080 #tomcat启动端口
server:
  tomcat:
    basedir: /file
  port: 8088
spring:
  resources:
    static-locations: classpath:/static/
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  activemq:
    user: admin
    password: Admin#@888
    broker-url: tcp://${application.ip}:61616
    pool:
      enabled: true
      max-connections: 10000
      idle-timeout: 300000 #300秒空闲则关闭连接
      block-if-full: true #连接用完之后是否阻塞
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
  datasource:
    # 如果存在多个数据源，监控的时候可以通过名字来区分开来
    name: mysql
    # 连接数据库的url
    url: jdbc:mysql://${application.ip}:3306/wbmp?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
    # 连接数据库的账号
    username: root
    #  连接数据库的密码
    password: root77
      # 连接数据库的url
      #    url: jdbc:mysql://127.0.0.1:3306/ssp?useUnicode=true&characterEncoding=UTF-8&useSSL=false&autoReconnect=true&failOverReadOnly=false&serverTimezone=GMT%2B8
      # 连接数据库的账号
    #    username: root
    #  连接数据库的密码
    #    password: 123456
    # 使用druid数据源
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      # 扩展插件
      # 监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
      filters: stat
      # 最大连接池数量
      max-active: 20
      # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      initial-size: 1
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 最小连接池数量
      min-idle: 1
      time-between-eviction-runs-millis: 60000
      # 连接保持空闲而不被驱逐的最长时间
      min-evictable-idle-time-millis: 300000
      # 用来检测连接是否有效的sql，要求是一个查询语句
      # 如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validation-query: select count(1) from dual
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
      # 是否缓存preparedStatement，即PSCache
      pool-prepared-statements: false
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
      max-open-prepared-statements: -1
  #redis 配置
  redis:
    host: ${application.ip}
    port: 6379
    password: redisAdmin888
    expireTime: 10 #设置token过期时间（分钟)
    lettuce:
      pool:
        max-active: 256 #活动连接数
        max-idle: 64  #最大空闲连接
        max-wait: 30000
        min-idle: 32
    sentinel:
      master: mymaster
      nodes: 162.16.14.78:26379,162.16.14.78:26380,${application.ip}:26379,${application.ip}:26380
mybatis-plus:
  #如果将来整个项目启动较慢，可把此处扫描包位置写到每个依赖的具体dao层，缺点为每添加一个新模块，就需要在此处重新添加，优点为项目启动速度快
  type-aliases-package: com.bank
  mapper-locations: classpath*:/mybatis-mapper/*.xml
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #开启MyBatis的二级缓存
    cache-enabled: true
logging:
  config: classpath:log4j2.yml

#自定义属性
#日志版本
LOG:
  VERSION: 1
# FTP 地址
DAT:
  FTP_IP: 162.16.8.202
  #FTP 端口号
  FTP_PORT: 21
  #FTP 用户名
  FTP_USER_NAME: ftpuser
  #FTP 密码
  FTP_PASS_WORD: abc@1234
  #FTP 文件路径
  FTP_FILE_PATH: /nhr/
  #FTP 核心文件 文件
  FTP_FILE_HX_PATH: /hxdata/
  #大数据文件 本地服务器路径
  LOCALPATH: /home/bgm/bankdata/
  #大数据 机构文件名称
  ORGFILE_NAME: NHR_ORGANIZATION_?.dat
  #大数据 用户文件名称
  USERFILE_NAME: NHR_EMPLOYEE_?.dat
  #大数据 核心机构文件名称
  HX_ORGFILE_NAME: NFRT_ORG_ALL_?
#巡查证明文件上传路径
PARTORAL:
  PROVE_FILE_PATH: /video/prove
  PROVE_ACCESS_PATH: /video/prove
  #巡查记录生成excel 存放路径
  RECORD_EXCEL: /video/record/excel/
  RECORD_EXCEL_ACCESS_PATH: /video/record/excel/
  #巡查记录证明文件打包zip路径
  RECORD_PROVE_ZIP_PATH: /video/record/provezip/
  RECORD_PROVE_ZIP_ACCESS_PATH: /video/record/provezip/
  #巡查记录生成 zip 存放路径
  RECORD_DOWNLOAD_PATH: /video/record/download/
  RECORD_DOWNLOAD_ACCESS_PATH: /video/record/download/
#考勤记录
ATTEND:
  DOWN_EXCEL_PATH: /video/attend/
  DOWN_EXCEL_ACCESS_PATH: /video/attend/
#快乐服务
HAPPYSERVICE:
  HAPPY_FILE_PATH: /home/bgm/video/happy
  HAPPY_ACCESS_PATH: /video/happy
#活动沙龙
ACTIVITIE:
  ACTIVITIE_FILE_PATH: /home/bgm/vedio/activitie
  ACTIVITIE_ACCESS_PATH: /vedio/activitie
#外包人员
CARDSUPPLE:
  CARD_FILE_PATH: /home/bgm/video/cardsupple
  CARD_ACCESS_PATH: /video/cardsupple
  WORK_FILE_PATH: /video/worksupple
  WORK_ACCESS_PATH: /video/worksupple
##################素材上传配置################
MATERIAL:
  #素材临时存储路径-共享
  UPLOAD_FILE_PATH: /home/bgm/video/material
  #http素材访问路径
  FILE_PATH_FILE: /video/material
  #二维码生成路径
  qrImages: /qrImages
  #http素材临时路径-共享
  HTTP_PATH: http://${application.ip}:${application.port}
  #素材临时存储FTP_IP
  FILE_FTP_IP: ${application.ip}
  #素材临时存储FTP_PORT
  FILE_FTP_PORT: 21
  #素材临时存储FTP_USER
  FILE_FTP_USER: bgm
  #素材临时存储FTP_PASS
  FILE_FTP_PASS: em_bank
  #素材临时存储路径-FTP
  FILE_FTP_PATH: /material
  #http素材临时路径-FTP
  FILE_FTP_HTTP_PATH: http://${application.ip}:${application.port}/material
GAME:
  HTTP_DDL: /multimedia/diandianle/index.html#/?id=
  HTTP_XQDZ: /multimedia/starwar/index.html#/?id=

#mq 发送报文地址
MESSAGE:
  #测试地址用
  PATH: http://${application.ip}:${application.port}/${tomcat.contextPath}/jms/topic
  #PATH: http://localhost:8088/jms/topic

tomcat:
  baseIp: http://${application.ip}:${application.port} #应用服务器地址
  port: ${application.port} #tomcat启动端口
  contextPath: /wbmp-server #webSocket分布式使用

